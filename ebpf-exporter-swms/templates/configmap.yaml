apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
  labels:
    {{- include "ebpf-exporter-swms.labels" . | nindent 4 }}
data:
  ebpf-config.yaml: |-
    programs:
      - name: cachestat
        # https://github.com/cloudflare/ebpf_exporter/blob/master/examples/cachestat-complex.yaml
        metrics:
          counters:
            - name: page_cache_ops_total
              help: Page cache operation counters by type
              table: counts
              labels:
                - name: op
                  size: 8
                  decoders:
                    - name: ksym
                - name: command
                  size: 128
                  decoders:
                    - name: string
                    - name: regexp
                      regexps:
                        - ^systemd-journal$
                        - ^syslog-ng$
                - name: dag_id
                  size: 8
                  decoders:
                    - name: airflow_dag_id
                - name: run_id
                  size: 8
                  decoders:
                    - name: airflow_run_id
                - name: task_id
                  size: 8
                  decoders:
                    - name: airflow_task_id
        kprobes:
          add_to_page_cache_lru: do_count
          mark_page_accessed: do_count
          account_page_dirtied: do_count
          mark_buffer_dirty: do_count
        code: |
          #include <uapi/linux/ptrace.h>

          struct key_t {
              u64 ip;
              char command[128];
              u64 dag_id;
              u64 run_id;
              u64 task_id;
          };

          BPF_HASH(counts, struct key_t);

          int do_count(struct pt_regs *ctx) {
              struct key_t key = { .ip = PT_REGS_IP(ctx) - 1 };
              bpf_get_current_comm(&key.command, sizeof(key.command));

              counts.increment(key);

              return 0;
          }