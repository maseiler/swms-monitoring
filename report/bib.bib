@article{gil2007examiningchallengesscientific,
	title = {Examining the {{Challenges}} of {{Scientific Workflows}}},
	author = {Gil, Yolanda and Deelman, Ewa and Ellisman, Mark and Fahringer, Thomas and Fox, Geoffrey and Gannon, Dennis and Goble, Carole and Livny, Miron and Moreau, Luc and Myers, Jim},
	date = {2007-12},
	journaltitle = {Computer},
	volume = {40},
	number = {12},
	pages = {24--32},
	issn = {1558-0814},
	doi = {10.1109/MC.2007.421},
	abstract = {Workflows have emerged as a paradigm for representing and managing complex distributed computations and are used to accelerate the pace of scientific progress. A recent National Science Foundation workshop brought together domain, computer, and social scientists to discuss requirements of future scientific applications and the challenges they present to current workflow technologies.},
	eventtitle = {Computer},
	keywords = {Acceleration,Application software,Collaborative work,collaboratories,computing practices,Concurrent computing,Distributed computing,Earthquakes,scientific workflows}
}

@inproceedings{aljamal2018comparativereviewhighperformance,
	title = {A Comparative Review of High-Performance Computing Major Cloud Service Providers},
	booktitle = {2018 9th {{International Conference}} on {{Information}} and {{Communication Systems}} ({{ICICS}})},
	author = {Aljamal, Rawan and El-Mousa, Ali and Jubair, Fahed},
	date = {2018-04},
	pages = {181--186},
	issn = {2573-3346},
	doi = {10.1109/IACS.2018.8355463},
	abstract = {This paper reviews the top leading cloud providers, surveys their offering related to High Performance Computing (HPC). Four top cloud provider are selected, Microsoft Windows Azure, Amazon Elastic Compute Cloud (Amazon EC2), Google Compute Engine and Oracle Cloud. Each one of them has its unique value proposition that enables it to survive in the market and make it a real competitor. A comparative analysis of the offerings and relative benefits of each are provided. This study is an introduction to our extensive work in the HPC field.},
	eventtitle = {2018 9th {{International Conference}} on {{Information}} and {{Communication Systems}} ({{ICICS}})},
	keywords = {Amazon EC2,Benchmark testing,Cloud computing,Computer architecture,Google Compute,High-Performance Computing,Microsoft Azure,Microsoft Windows,Oracle,performance,price,Task analysis,Virtual machining}
}

@inproceedings{levin2020viperproberethinkingmicroservice,
	title = {{{ViperProbe}}: {{Rethinking Microservice Observability}} with {{eBPF}}},
	shorttitle = {{{ViperProbe}}},
	booktitle = {2020 {{IEEE}} 9th {{International Conference}} on {{Cloud Networking}} ({{CloudNet}})},
	author = {Levin, Joshua and Benson, Theophilus A.},
	date = {2020-11},
	pages = {1--8},
	doi = {10.1109/CloudNet51028.2020.9335808},
	abstract = {Recent shifts to microservice-based architectures and the supporting servicemesh radically disrupt the landscape of performance-oriented management tasks. While the adoption of frameworks like Istio and Kubernetes ease the management and organization of such systems, they do not themselves provide strong observability. Microservice observability requires diverse, highly specialized, and often adaptive, metrics and algorithms to monitor both the health of individual services and the larger application. However, modern metrics collection frameworks are relatively static and rigid. We introduce ViperProbe, an eBPF-based microservices collection framework that provides (1) dynamic sampling and (2) collection of deep, diverse, and precise system metrics. Viper-Probe builds on the observation that the adoption of a common set of design patterns, e.g., servicemesh, enables offline analysis. By examining the performance profile of these patterns before deploying on production, ViperProbe can effectively reduce the set of collected metrics, thereby improving the efficiency and effectiveness of those metrics. To the best of our knowledge, ViperProbe is the first scalable eBPF-based dynamic and adaptive microservices metrics collection framework. Our results show ViperProbe has limited overhead, while significantly more effective for traditional management tasks, e.g., horizontal autoscaling.},
	eventtitle = {2020 {{IEEE}} 9th {{International Conference}} on {{Cloud Networking}} ({{CloudNet}})},
	keywords = {Measurement,Monitoring,Observability,Runtime,Software,Task analysis,Tools}
}

@inproceedings{valerio2008capturingworkflowevent,
	title = {Capturing {{Workflow Event Data}} for {{Monitoring}}, {{Performance Analysis}}, and {{Management}} of {{Scientific Workflows}}},
	booktitle = {2008 {{IEEE Fourth International Conference}} on {{eScience}}},
	author = {Valerio, Matthew D. and Sahoo, Satya S. and Barga, Roger S. and Jackson, Jared J.},
	date = {2008-12},
	pages = {626--633},
	doi = {10.1109/eScience.2008.164},
	abstract = {To effectively support real-time monitoring and performance analysis of scientific workflow execution, varying levels of event data must be captured and made available to interested parties. This paper discusses the creation of an ontology-aware workflow monitoring system for use in the Trident system which utilizes a distributed publish/subscribe event model. The implementation of the publish/subscribe system is discussed and performance results are presented.},
	eventtitle = {2008 {{IEEE Fourth International Conference}} on {{eScience}}},
	keywords = {Condition monitoring,Conference management,Costs,Histograms,History,Logic,Ontologies,Performance analysis,publish/subscribe,Resource management,Runtime,Trident,workflow}
}

@online{ebpf,
	title = {{{eBPF}} - {{Introduction}}, {{Tutorials}} \& {{Community Resources}}},
	url = {https://ebpf.io/},
	urldate = {2022-09-12}
}

@online{grafana,
	title = {Grafana: {{The}} Open Observability Platform},
	shorttitle = {Grafana},
	url = {https://grafana.com/},
	urldate = {2022-09-12},
	abstract = {Grafana is the open source analytics \& monitoring solution for every database.},
	langid = {english},
	organization = {{Grafana Labs}}
}


@online{airflow,
	title = {Home},
	url = {https://airflow.apache.org/},
	urldate = {2022-09-13},
	abstract = {Platform created by the community to programmatically author, schedule and monitor workflows.},
	langid = {english},
	organization = {{Apache Airflow}}
}

@online{nextflow,
	title = {A {{DSL}} for Parallel and Scalable Computational Pipelines | {{Nextflow}}},
	url = {https://www.nextflow.io/},
	urldate = {2022-09-13},
	abstract = {Nextflow enables scalable and reproducible scientific workflows using software containers. It allows the adaptation of pipelines written in the most common scripting languages.},
	langid = {english}
}

@online{pegasus,
	title = {Main},
	url = {https://pegasus.isi.edu/},
	urldate = {2022-09-13},
	abstract = {Meet Rajiv Mayani  Currently, Rajiv is a Senior Research Engineer working on Pegasus and NRGR (https://www.nimhgenetics.org/about-us/what-we-do). The NRGR website won the dotcomm award in 2019 (https://enter.dotcommawards.com/entry/nimh-repository-and-genomics-resource-website/).Pegasus in 5 MinutesIn this quick 5 minute presentation, the Pegasus team gives you an introduction~into the Pegasus Workflow Management System. We give a rundown on how Pegasus~workflows are created, compiled for your execution environment,},
	langid = {english},
	organization = {{Pegasus WMS}}
}

@online{taverna,
	title = {Taverna - {{Apache Incubator}}},
	url = {https://incubator.apache.org/projects/taverna.html},
	urldate = {2022-09-13}
}

@online{arvados,
	title = {Arvados {{Homepage}} | {{Arvados}}},
	url = {https://arvados.org/},
	urldate = {2022-09-13}
}

@online{airflowExecutor,
	title = {Executor — {{Airflow Documentation}}},
	url = {https://airflow.apache.org/docs/apache-airflow/stable/executor/index.html#executor-types},
	urldate = {2022-09-13}
}

@online{airflowArchitecture,
	title = {Architecture {{Overview}} — {{Airflow Documentation}}},
	url = {https://airflow.apache.org/docs/apache-airflow/stable/concepts/overview.html},
	urldate = {2022-09-13}
}

@software{airflowDag,
	title = {Apache {{Airflow}}},
	date = {2022-09-13T08:43:04Z},
	origdate = {2015-04-13T18:04:58Z},
	url = {https://github.com/apache/airflow/blob/ffee6bceb32eba159a7a25a4613d573884a6a58d/airflow/example_dags/example_kubernetes_executor.py},
	urldate = {2022-09-13},
	abstract = {Apache Airflow - A platform to programmatically author, schedule, and monitor workflows},
	organization = {{The Apache Software Foundation}}
}

@online{airflowMonitoring,
	title = {Logging and {{Monitoring}} Architecture — {{Airflow Documentation}}},
	url = {https://airflow.apache.org/docs/apache-airflow/stable/logging-monitoring/logging-architecture.html},
	urldate = {2022-09-13}
}

@software{statsd,
	title = {{{StatsD}}},
	date = {2022-09-13T07:49:17Z},
	origdate = {2010-12-30T00:09:50Z},
	url = {https://github.com/statsd/statsd},
	urldate = {2022-09-13},
	abstract = {Daemon for easy but powerful stats aggregation},
	organization = {{statsd}},
	keywords = {graphite,javascript,metrics,nodejs,statsd}
}

@online{airflowMetrics,
	title = {Metrics — {{Airflow Documentation}}},
	url = {https://airflow.apache.org/docs/apache-airflow/stable/logging-monitoring/metrics.html},
	urldate = {2022-09-13}
}

@online{whatebpf,
	title = {What Is {{eBPF}}? {{An Introduction}} and {{Deep Dive}} into the {{eBPF Technology}}},
	url = {https://ebpf.io/what-is-ebpf/},
	urldate = {2022-09-13}
}

@online{ebpfMaps,
	title = {Types of {{eBPF}} Maps — {{Prototype Kernel}} 0.0.1 Documentation},
	url = {https://prototype-kernel.readthedocs.io/en/latest/bpf/ebpf_maps_types.html},
	urldate = {2022-09-13}
}

@online{ebpfCloudflare,
	title = {cloudflare/ebpf\_exporter - Prometheus exporter for custom eBPF metrics},
	url = {https://github.com/cloudflare/ebpf_exporter},
	urldate = {2022-09-13}
}

@online{ebpfPull75,
	title = {cloudflare/ebpf\_exporter - Prometheus exporter for custom eBPF metrics - add kubernetes context decoder},
	url = {https://github.com/cloudflare/ebpf_exporter/pull/75/commits},
	urldate = {2022-09-13}
}

@online{bcc,
	title = {BCC - Tools for BPF-based Linux IO analysis, networking, monitoring, and more},
	url = {https://github.com/iovisor/bcc/tree/master/tools},
	urldate = {2022-09-13}
}

@online{gcpMachineType,
	title = {Maschinenfamilie für allgemeine Zwecke  |  Compute Engine-Dokumentation  |  Google Cloud},
	url = {https://cloud.google.com/compute/docs/general-purpose-machines?hl=de#e2-standard},
	urldate = {2022-09-13}
}

@online{airflowHelmChart,
	title = {Helm Chart for Apache Airflow — helm-chart Documentation},
	url = {https://airflow.apache.org/docs/helm-chart/stable/index.html},
	urldate = {2022-09-13}
}

@book{harenslak2021data,
	title={Data Pipelines with Apache Airflow},
	author={Harenslak, Bas and de Ruiter, Julian},
	year={2021},
	publisher={Manning Publications Company}
}

@inproceedings{cassagnes2020riseebpfnonintrusive,
	title = {The Rise of {{eBPF}} for Non-Intrusive Performance Monitoring},
	booktitle = {{{NOMS}} 2020 - 2020 {{IEEE}}/{{IFIP Network Operations}} and {{Management Symposium}}},
	author = {Cassagnes, Cyril and Trestioreanu, Lucian and Joly, Clement and State, Radu},
	date = {2020-04},
	pages = {1--7},
	issn = {2374-9709},
	doi = {10.1109/NOMS47738.2020.9110434},
	abstract = {In this paper, we explain that container engines are strengthening their isolation mechanisms. Therefore, non-intrusive monitoring becomes a must-have for the performance analysis of containerized user-space application in production environments. After a literature review and background of Linux subsystems and container isolation concepts, we present our lessons learned of using the extended Berkeley packet filter to monitor and profile performance. We carry out the profiling and tracing of several Interledger connectors using two full-fledged implementations of the Interledger protocol specifications.},
	eventtitle = {{{NOMS}} 2020 - 2020 {{IEEE}}/{{IFIP Network Operations}} and {{Management Symposium}}},
	keywords = {Cloud computing,Connectors,Containers,eBPF,Interledger,Linux,Performance,Performance analysis,Production,Profiling,Protocols,Software,Tracing}
}

@software{bcc,
	title = {{{BPF Compiler Collection}} ({{BCC}})},
	date = {2022-09-14T07:59:17Z},
	origdate = {2015-05-01T19:52:32Z},
	url = {https://github.com/iovisor/bcc},
	urldate = {2022-09-14},
	abstract = {BCC - Tools for BPF-based Linux IO analysis, networking, monitoring, and more},
	organization = {{IO Visor Project}}
}

@software{exampleComplex,
	title = {Apache {{Airflow}}},
	date = {2022-09-14T09:55:29Z},
	origdate = {2015-04-13T18:04:58Z},
	url = {https://github.com/apache/airflow/blob/ffee6bceb32eba159a7a25a4613d573884a6a58d/airflow/example_dags/example_complex.py},
	urldate = {2022-09-14},
	abstract = {Apache Airflow - A platform to programmatically author, schedule, and monitor workflows},
	organization = {{The Apache Software Foundation}}
}